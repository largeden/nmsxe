<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE smi SYSTEM "smi.dtd">
<!--INFORMANT-STD.xml-->
<!--XML generated by MG-SOFT MIB Explorer Version 5.0 Build 402-->
<smi>
	<module name="INFORMANT-STD" language="SMIv2">
		<organization><![CDATA[Informant Systems, Inc.]]></organization>
		<contact>
		<![CDATA[Garth Williams
11135-23A Ave
Edmonton, AB  T6J4W5  Canada
Tel: +1 780 434 4113
E-mail: garth.williams@wtcs.org]]>
		</contact>
		<description>
		<![CDATA[The MIB module for SNMP Informant Standard
performance counter entries.]]>
		</description>
		<revision date="2008-07-11 23:59">
			<description>
			<![CDATA[Multiplied lDiskAvgDiskSecPerRead,
lDiskAvgDiskSecPerTransfer,
lDiskAvgDiskSecPerWrite by 1000000 and
lDiskAvgDiskQueueLength,
lDiskAvgDiskReadQueueLength,
lDiskAvgDiskWriteQueueLength by 1000 since these
values are commonly fractional (less than 1).]]>
			</description>
		</revision>
		<revision date="2008-03-21 23:08">
			<description>
			<![CDATA[Added memory OIDs in kilobytes and megabytes
to support 64-bit values in Gauge32.]]>
			</description>
		</revision>
		<revision date="2005-07-19 18:26">
			<description>
			<![CDATA[Added the systemSystemUpTime OID to provide
access how long the computer has been up in
seconds.]]>
			</description>
		</revision>
		<revision date="2004-02-29 06:27">
			<description>
			<![CDATA[Changed the syntax of the datapoints from
integer to gauge.]]>
			</description>
		</revision>
		<revision date="2004-01-17 16:02">
			<description>
			<![CDATA[The initial revision of this MIB module.]]>
			</description>
		</revision>
		<identity node="standard" />
	</module>
	<imports>
		<import module="SNMPv2-SMI" name="enterprises" />
		<import module="SNMPv2-SMI" name="MODULE-IDENTITY" />
		<import module="SNMPv2-SMI" name="OBJECT-IDENTITY" />
		<import module="SNMPv2-TC" name="TEXTUAL-CONVENTION" />
		<import module="WTCS" name="informant" />
		<import module="WTCS" name="InstanceName" />
	</imports>
<!--Node definitions-->
	<nodes>
        <node name="standard" oid="1.3.6.1.4.1.9600.1.1" />	
		<table name="logicalDiskTable" oid="1.3.6.1.4.1.9600.1.1.1" status="current">
			<description>
			<![CDATA[The Logical Disk performance object consists
of counters that monitor logical partitions of
hard or fixed disk drives. System Monitor
identifies logical disks by their drive letter,
such as 'C.' To monitor Logical Disk object
counters, you must activate them by typing the
following at the command prompt: diskperf -yv]]>
			</description>
			<row name="logicalDiskEntry" oid="1.3.6.1.4.1.9600.1.1.1.1" create="false" status="current">
				<linkage implied="false">
					<index module="INFORMANT-STD" name="lDiskInstance" />
				</linkage>
				<description>
				<![CDATA[Performance information for one particular
instance of 'LogicalDisk' object.]]>
				</description>
				<column name="lDiskInstance" oid="1.3.6.1.4.1.9600.1.1.1.1.1" status="current">
					<syntax>
						<type name="InstanceName" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Instance name.]]>
					</description>
				</column>
				<column name="lDiskPercentDiskReadTime" oid="1.3.6.1.4.1.9600.1.1.1.1.2" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[% Disk Read Time is the percentage of elapsed
time that the selected disk drive is busy
servicing read requests.]]>
					</description>
				</column>
				<column name="lDiskPercentDiskTime" oid="1.3.6.1.4.1.9600.1.1.1.1.3" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[% Disk Time is the percentage of elapsed time
that the selected disk drive is busy servicing
read or write requests.]]>
					</description>
				</column>
				<column name="lDiskPercentDiskWriteTime" oid="1.3.6.1.4.1.9600.1.1.1.1.4" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[% Disk Write Time is the percentage of elapsed
time that the selected disk drive is busy
servicing write requests.]]>
					</description>
				</column>
				<column name="lDiskPercentFreeSpace" oid="1.3.6.1.4.1.9600.1.1.1.1.5" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[% Free Space is the ratio of the free space
available on the logical disk unit to the total
usable space provided by the selected logical
disk drive.]]>
					</description>
				</column>
				<column name="lDiskPercentIdleTime" oid="1.3.6.1.4.1.9600.1.1.1.1.6" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[% Idle Time reports the percentage of time
during the sample interval that the disk was
idle.]]>
					</description>
				</column>
				<column name="lDiskAvgDiskQueueLength" oid="1.3.6.1.4.1.9600.1.1.1.1.7" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Avg. Disk Queue Length is the average number
of both read and write requests that were
queued for the selected disk during the sample
interval.

Multiplied by 1000 to provide a useful gauge
value since it is commonly a fractional value.]]>
					</description>
				</column>
				<column name="lDiskAvgDiskReadQueueLength" oid="1.3.6.1.4.1.9600.1.1.1.1.8" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Avg. Disk Read Queue Length is the average
number of read requests that were queued for
the selected disk during the sample interval.

Multiplied by 1000 to provide a useful gauge
value since it is commonly a fractional value.]]>
					</description>
				</column>
				<column name="lDiskAvgDiskWriteQueueLength" oid="1.3.6.1.4.1.9600.1.1.1.1.9" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Avg. Disk Write Queue Length is the average
number of write requests that were queued for
the selected disk during the sample interval.

Multiplied by 1000 to provide a useful gauge
value since it is commonly a fractional value.]]>
					</description>
				</column>
				<column name="lDiskAvgDiskSecPerRead" oid="1.3.6.1.4.1.9600.1.1.1.1.10" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Avg. Disk sec/Read is the average time, in
seconds, of a read of data from the disk.

Multiplied by 1000000 to provide a useful gauge
value since it is commonly a fractional value.]]>
					</description>
				</column>
				<column name="lDiskAvgDiskSecPerTransfer" oid="1.3.6.1.4.1.9600.1.1.1.1.11" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Avg. Disk sec/Transfer is the time, in
seconds, of the average disk transfer.

Multiplied by 1000000 to provide a useful gauge
value since it is commonly a fractional value.]]>
					</description>
				</column>
				<column name="lDiskAvgDiskSecPerWrite" oid="1.3.6.1.4.1.9600.1.1.1.1.12" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Avg. Disk sec/Write is the average time, in
seconds, of a write of data to the disk.

Multiplied by 1000000 to provide a useful gauge
value since it is commonly a fractional value.]]>
					</description>
				</column>
				<column name="lDiskCurrentDiskQueueLength" oid="1.3.6.1.4.1.9600.1.1.1.1.13" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Current Disk Queue Length is the number of
requests outstanding on the disk at the time
the performance data is collected.	It includes
requests in service at the time of the
snapshot.  This is an instantaneous length, not
an average over the time interval. 
Multi-spindle disk devices can have multiple
requests active at one time, but other
concurrent requests are awaiting service.  This
counter might reflect a transitory high or low
queue length, but if there is a sustained load
on the disk drive, it is likely that this will
be consistently high.  Requests are
experiencing delays proportional to the length
of this queue minus the number of spindles on
the disks.	This difference should average less
than 2 for good performance.]]>
					</description>
				</column>
				<column name="lDiskDiskBytesPerSec" oid="1.3.6.1.4.1.9600.1.1.1.1.14" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Disk Bytes/sec is the rate bytes are
transferred to or from the disk during write or
read operations.]]>
					</description>
				</column>
				<column name="lDiskDiskReadBytesPerSec" oid="1.3.6.1.4.1.9600.1.1.1.1.15" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Disk Read Bytes/sec is the rate bytes are
transferred from the disk during read
operations.]]>
					</description>
				</column>
				<column name="lDiskDiskReadsPerSec" oid="1.3.6.1.4.1.9600.1.1.1.1.16" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Disk Reads/sec is the rate of read operations
on the disk.]]>
					</description>
				</column>
				<column name="lDiskDiskTransfersPerSec" oid="1.3.6.1.4.1.9600.1.1.1.1.17" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Disk Transfers/sec is the rate of read and
write operations on the disk.]]>
					</description>
				</column>
				<column name="lDiskDiskWriteBytesPerSec" oid="1.3.6.1.4.1.9600.1.1.1.1.18" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Disk Write Bytes is rate bytes are transferred
to the disk during write operations.]]>
					</description>
				</column>
				<column name="lDiskDiskWritesPerSec" oid="1.3.6.1.4.1.9600.1.1.1.1.19" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Disk Writes/sec is the rate of write
operations on the disk.]]>
					</description>
				</column>
				<column name="lDiskFreeMegabytes" oid="1.3.6.1.4.1.9600.1.1.1.1.20" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Free Megabytes displays the unallocated space
on the disk drive in megabytes. One megabyte =
1,048,576 bytes.]]>
					</description>
				</column>
				<column name="lDiskSplitIOPerSec" oid="1.3.6.1.4.1.9600.1.1.1.1.21" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Split IO/Sec reports the rate that I/Os to the
disk were split into multiple I/Os.  A split
I/O may result from requesting data in a size
that is too large to fit into a single I/O or
that the disk is fragmented.]]>
					</description>
				</column>
			</row>
		</table>
		<node name="memory" oid="1.3.6.1.4.1.9600.1.1.2" />
		<scalar name="memoryAvailableBytes" oid="1.3.6.1.4.1.9600.1.1.2.1" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Available Bytes is the amount of physical
memory available to processes running on the
computer, in bytes.  It is calculated by
summing space on the Zeroed, Free, and Stand by
memory lists.  Free memory is ready for use;
Zeroed memory are pages of memory filled with
zeros to prevent later processes from seeing
data used by a previous process. Standby memory
is memory removed from a process' working set
(its physical memory) on route to disk, but is
still available to be recalled.  This counter
displays the last observed value only; it is
not an average. ]]>
			</description>
		</scalar>
		<scalar name="memoryAvailableKBytes" oid="1.3.6.1.4.1.9600.1.1.2.2" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Available KBytes is the amount of physical
memory available to processes running on the
computer, in Kilobytes (Bytes / 1,024).  It is
calculated by summing space on the Zeroed,
Free, and Stand by memory lists.  Free memory
is ready for use; Zeroed memory are pages of
memory filled with zeros to prevent later
processes from seeing data used by a previous
process. Standby memory is memory removed from
a process' working set (its physical memory) on
route to disk, but is still available to be
recalled.  This counter displays the last
observed value only; it is not an average. ]]>
			</description>
		</scalar>
		<scalar name="memoryAvailableMBytes" oid="1.3.6.1.4.1.9600.1.1.2.3" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Available MBytes is the amount of physical
memory available to processes running on the
computer, in Megabytes (Bytes / 1,048,576).  It
is calculated by summing space on the Zeroed,
Free, and Stand by memory lists.  Free memory
is ready for use; Zeroed memory are pages of
memory filled with zeros to prevent later
processes from seeing data used by a previous
process. Standby memory is memory removed from
a process' working set (its physical memory) on
route to disk, but is still available to be
recalled.  This counter displays the last
observed value only; it is not an average. ]]>
			</description>
		</scalar>
		<scalar name="memoryCommittedBytes" oid="1.3.6.1.4.1.9600.1.1.2.4" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Committed Bytes is the amount of committed
virtual memory, in bytes.  (Committed memory is
physical memory for which space has been
reserved on the disk paging file in case it
needs to be written back to disk). This counter
displays the last observed value only; it is
not an average. ]]>
			</description>
		</scalar>
		<scalar name="memoryCacheBytes" oid="1.3.6.1.4.1.9600.1.1.2.5" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Cache Bytes is the sum of the System Cache
Resident Bytes, System Driver Resident Bytes,
System Code Resident Bytes, and Pool Paged
Resident Bytes counters.  This counter displays
the last observed value only; it is not an
average. ]]>
			</description>
		</scalar>
		<scalar name="memoryCacheBytesPeak" oid="1.3.6.1.4.1.9600.1.1.2.6" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Cache Bytes Peak is the maximum value of Cache
Bytes since the system was last restarted. 
This value might be larger than the current
size of the cache.	Cache Bytes is the sum of
the System Cache Resident Bytes, System Driver
Resident Bytes, System Code Resident Bytes, and
Pool Paged Resident Bytes counters.  This
counter displays the last observed value only;
it is not an average. ]]>
			</description>
		</scalar>
		<scalar name="memoryPageFaultsPerSec" oid="1.3.6.1.4.1.9600.1.1.2.7" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Page Faults/sec is the overall rate faulted
pages are handled by the processor.  It is
measured in numbers of pages faulted per
second.  A page fault occurs when a process
requires code or data that is not in its
working set (its space in physical memory). 
This counter includes both hard faults (those
that require disk access) and soft faults
(where the faulted page is found elsewhere in
physical memory). Most processors can handle
large numbers of soft faults without
consequence.  However, hard faults can cause
significant delays. This counter displays the
difference between the values observed in the
last two samples, divided by the duration of
the sample interval. ]]>
			</description>
		</scalar>
		<scalar name="memoryPagesInputPerSec" oid="1.3.6.1.4.1.9600.1.1.2.8" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Pages Input/sec is the number of pages read
from disk to resolve hard page faults.  (Hard
page faults occur when a process requires code
or data that is not in its working set or
elsewhere in physical memory, and must be
retrieved from disk). This counter was designed
as a primary indicator of the kinds of faults
that cause system-wide delays.  It includes
pages retrieved to satisfy faults in the file
system cache (usually requested by
applications) and in non-cached mapped memory
files.  This counter counts numbers of pages,
and can be compared to other counts of pages,
such as Memory: Page Faults/sec, without
conversion.  This counter displays the
difference between the values observed in the
last two samples, divided by the duration of
the sample interval. ]]>
			</description>
		</scalar>
		<scalar name="memoryPagesOutputPerSec" oid="1.3.6.1.4.1.9600.1.1.2.9" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Pages Output/sec is the number of pages
written to disk to free up space in physical
memory.  Pages are written back to disk only if
they are changed in physical memory, so they
are likely to hold data, not code.	A high rate
of pages output might indicate a memory
shortage.  Windows NT writes more pages back to
disk to free up space when physical memory is
in short supply.  This counter counts numbers
of pages, and can be compared to other counts
of pages, without conversion.  This counter
displays the difference between the values
observed in the last two samples, divided by
the duration of the sample interval. ]]>
			</description>
		</scalar>
		<scalar name="memoryPagesPerSec" oid="1.3.6.1.4.1.9600.1.1.2.10" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Pages/sec is the number of pages read from or
written to disk to resolve hard page faults. 
(Hard page faults occur when a process requires
code or data that is not in its working set or
elsewhere in physical memory, and must be
retrieved from disk). This counter was designed
as a primary indicator of the kinds of faults
that cause system-wide delays.  It is the sum
of Memory: Pages Input/sec and Memory: Pages
Output/sec.  It is counted in numbers of pages,
so it can be compared to other counts of pages,
such as Memory: Page Faults/sec, without
conversion.  It includes pages retrieved to
satisfy faults in the file system cache
(usually requested by applications) non-cached
mapped memory files.  This counter displays the
difference between the values observed in the
last two samples, divided by the duration of
the sample interval. ]]>
			</description>
		</scalar>
		<scalar name="memoryPoolNonpagedBytes" oid="1.3.6.1.4.1.9600.1.1.2.11" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Pool Nonpaged Bytes is the number of bytes in
the nonpaged pool, an area of system memory
(physical memory used by the operating system)
for objects that cannot be written to disk, but
must remain in physical memory as long as they
are allocated.  Memory: Pool Nonpaged Bytes is
calculated differently than Process: Pool
Nonpaged Bytes, so it might not equal Process:
Pool Nonpaged Bytes: _Total.  This counter
displays the last observed value only; it is
not an average.  ]]>
			</description>
		</scalar>
		<scalar name="memoryPoolPagedBytes" oid="1.3.6.1.4.1.9600.1.1.2.12" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Pool Paged Bytes is the number of bytes in the
paged pool, an area of system memory (physical
memory used by the operating system) for
objects that can be written to disk when they
are not being used.  Memory: Pool Paged Bytes
is calculated differently than Process: Pool
Paged Bytes, so it might not equal Process:
Pool Paged Bytes: _Total.  This counter
displays the last observed value only; it is
not an average.  ]]>
			</description>
		</scalar>
		<scalar name="memoryPoolPagedResidentBytes" oid="1.3.6.1.4.1.9600.1.1.2.13" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Pool Paged Resident Bytes is the current size
of paged pool in bytes.  The paged pool is an
area of system memory (physical memory used by
the operating system) for objects that can be
written to disk when they are not being used. 
Space used by the paged and nonpaged pools are
taken from physical memory, so a pool that is
too large denies memory space to processes. 
This counter displays the last observed value
only; it is not an average. ]]>
			</description>
		</scalar>
		<scalar name="memorySystemCacheResidentBytes" oid="1.3.6.1.4.1.9600.1.1.2.14" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[System Cache Resident Bytes is the number of
bytes from the file system cache that are
resident in physical memory.  This value
includes only current physical pages and does
not include any virtual memory pages not
currently resident.  As such this value may be
smaller than the actual amount of virtual
memory in use by the file system cache.  This
value is a component of Memory: System Code
Resident Bytes.  This counter displays the last
observed value only; it is not an average. ]]>
			</description>
		</scalar>
		<scalar name="memorySystemCodeResidentBytes" oid="1.3.6.1.4.1.9600.1.1.2.15" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[System Code Resident Bytes is the number of
bytes of operating system code currently in
physical memory that can be written to disk
when not in use. This value is a component of
System Code Total Bytes, which also includes
operating system code on disk.  System Code
Resident Bytes (and System Code Total Bytes)
does not include code that must remain in
physical memory and cannot be written to disk. 
This counter displays the last observed value
only; it is not an average.  ]]>
			</description>
		</scalar>
		<scalar name="memorySystemCodeTotalBytes" oid="1.3.6.1.4.1.9600.1.1.2.16" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[System Code Total Bytes is the number of bytes
of pageable operating system code currently in
virtual memory.  It is a measure of the amount
of physical memory being used by the operating
system that can be written to disk when not in
use.  This value is calculated by summing the
bytes in Ntoskrnl.exe, Hal.dll, the boot
drivers, and file systems loaded by
Ntldr/osloader.  This counter does not include
code that must remain in physical memory and
cannot be written to disk.	This counter
displays the last observed value only; it is
not an average. ]]>
			</description>
		</scalar>
		<scalar name="memorySystemDriverResidentBytes" oid="1.3.6.1.4.1.9600.1.1.2.17" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[System Driver Resident Bytes is the number of
bytes of pageable physical memory being used by
device drivers.  It is the working set
(physical memory area) of the drivers.  This
value is a component of Memory: System Driver
Total Bytes, which also includes driver memory
that has been written to disk.  Neither System
Driver Resident Bytes nor System Driver Total
Bytes includes memory that cannot be written to
disk.]]>
			</description>
		</scalar>
		<scalar name="memorySystemDriverTotalBytes" oid="1.3.6.1.4.1.9600.1.1.2.18" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[System Driver Total Bytes is the number of
bytes of pageable virtual memory currently
being used by device drivers.  (Pageable memory
can be written to disk when it is not being
used). It includes physical memory (Memory:
System Driver Resident Bytes) and code and data
paged to disk.  It is a component of Memory:
System Code Total Bytes.  This counter displays
the last observed value only; it is not an
average.  ]]>
			</description>
		</scalar>
        <scalar name="memoryCommittedKBytes" oid="1.3.6.1.4.1.9600.1.1.2.19" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Committed KiloBytes is the amount of committed
virtual memory, in kilobytes. Committed memory
is the physical memory which has space reserved
on the disk paging file(s). There can be one or
more paging files on each physical drive. This
counter displays the last observed value only;
it is not an average.]]>
			</description>
		</scalar>
		<scalar name="memoryCacheKBytes" oid="1.3.6.1.4.1.9600.1.1.2.20" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Cache KiloBytes is the sum of the
Memory\\System Cache Resident KiloBytes,
Memory\\System Driver Resident KiloBytes,
Memory\\System Code Resident KiloBytes, and
Memory\\Pool Paged Resident KiloBytes counters.
 This counter displays the last observed value
only; it is not an average. ]]>
			</description>
		</scalar>
		<scalar name="memoryCacheKBytesPeak" oid="1.3.6.1.4.1.9600.1.1.2.21" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Cache KiloBytes Peak is the maximum number of
kilobytes used by the file system cache since
the system was last restarted. This might be
larger than the current size of the cache. This
counter displays the last observed value only;
it is not an average. ]]>
			</description>
		</scalar>
		<scalar name="memoryPoolNonpagedKBytes" oid="1.3.6.1.4.1.9600.1.1.2.22" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Pool Nonpaged KiloBytes is the size, in
kilobytes, of the nonpaged pool, an area of
system memory (physical memory used by the
operating system) for objects that cannot be
written to disk, but must remain in physical
memory as long as they are allocated. 
Memory\\Pool Nonpaged KiloBytes is calculated
differently than Process\\Pool Nonpaged
KiloBytes, so it might not equal Process\\Pool
Nonpaged KiloBytes\\_Total.  This counter
displays the last observed value only; it is
not an average.]]>
			</description>
		</scalar>
		<scalar name="memoryPoolPagedKBytes" oid="1.3.6.1.4.1.9600.1.1.2.23" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Pool Paged KiloBytes is the size, in
kilobytes, of the paged pool, an area of system
memory (physical memory used by the operating
system) for objects that can be written to disk
when they are not being used.  Memory\\Pool
Paged KiloBytes is calculated differently than
Process\\Pool Paged KiloBytes, so it might not
equal Process\\Pool Paged KiloBytes\\_Total.
This counter displays the last observed value
only; it is not an average.]]>
			</description>
		</scalar>
		<scalar name="memoryPoolPagedResidentKBytes" oid="1.3.6.1.4.1.9600.1.1.2.24" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Pool Paged Resident KiloBytes is the current
size, in kilobytes, of the paged pool. The
paged pool is an area of system memory
(physical memory used by the operating system)
for objects that can be written to disk when
they are not being used. Space used by the
paged and nonpaged pools are taken from
physical memory, so a pool that is too large
denies memory space to processes. This counter
displays the last observed value only; it is
not an average.]]>
			</description>
		</scalar>
		<scalar name="memorySystemCacheResidentKBytes" oid="1.3.6.1.4.1.9600.1.1.2.25" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[System Cache Resident KiloBytes is the size,
in kilobytes, of the pageable operating system
code in the file system cache. This value
includes only current physical pages and does
not include any virtual memory pages not
currently resident. It does equal the System
Cache value shown in Task Manager. As a result,
this value may be smaller than the actual
amount of virtual memory in use by the file
system cache. This value is a component of
Memory\\System Code Resident KiloBytes which
represents all pageable operating system code
that is currently in physical memory. This
counter displays the last observed value only;
it is not an average. ]]>
			</description>
		</scalar>
		<scalar name="memorySystemCodeResidentKBytes" oid="1.3.6.1.4.1.9600.1.1.2.26" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[System Code Resident KiloBytes is the size, in
kilobytes of the operating system code
currently in physical memory that can be
written to disk when not in use. This value is
a component of Memory\\System Code Total
KiloBytes, which also includes operating system
code on disk. Memory\\System Code Resident
KiloBytes (and Memory\\System Code Total
KiloBytes) does not include code that must
remain in physical memory and cannot be written
to disk. This counter displays the last
observed value only; it is not an average.]]>
			</description>
		</scalar>
		<scalar name="memorySystemCodeTotalKBytes" oid="1.3.6.1.4.1.9600.1.1.2.27" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[System Code Total KiloBytes is the size, in
kilobytes, of the pageable operating system
code currently in virtual memory. It is a
measure of the amount of physical memory being
used by the operating system that can be
written to disk when not in use. This value is
calculated by summing the kilobytes in
Ntoskrnl.exe, Hal.dll, the boot drivers, and
file systems loaded by Ntldr/osloader.  This
counter does not include code that must remain
in physical memory and cannot be written to
disk. This counter displays the last observed
value only; it is not an average.]]>
			</description>
		</scalar>
		<scalar name="memorySystemDriverResidentKBytes" oid="1.3.6.1.4.1.9600.1.1.2.28" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[System Driver Resident KiloBytes is the size,
in kilobytes, of the pageable physical memory
being used by device drivers. It is the working
set (physical memory area) of the drivers. This
value is a component of Memory\\System Driver
Total KiloBytes, which also includes driver
memory that has been written to disk. Neither
Memory\\System Driver Resident KiloBytes nor
Memory\\System Driver Total KiloBytes includes
memory that cannot be written to disk.]]>
			</description>
		</scalar>
		<scalar name="memorySystemDriverTotalKBytes" oid="1.3.6.1.4.1.9600.1.1.2.29" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[System Driver Total KiloBytes is the size, in
kilobytes, of the pageable virtual memory
currently being used by device drivers.
Pageable memory can be written to disk when it
is not being used. It includes physical memory
(Memory\\System Driver Resident KiloBytes) and
code and data paged to disk. It is a component
of Memory\\System Code Total KiloBytes. This
counter displays the last observed value only;
it is not an average.  ]]>
			</description>
		</scalar>
		<scalar name="memoryCommittedMBytes" oid="1.3.6.1.4.1.9600.1.1.2.30" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Committed MegaBytes is the amount of committed
virtual memory, in megabytes. Committed memory
is the physical memory which has space reserved
on the disk paging file(s). There can be one or
more paging files on each physical drive. This
counter displays the last observed value only;
it is not an average.]]>
			</description>
		</scalar>
		<scalar name="memoryCacheMBytes" oid="1.3.6.1.4.1.9600.1.1.2.31" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Cache MegaBytes is the sum of the
Memory\\System Cache Resident MegaBytes,
Memory\\System Driver Resident MegaBytes,
Memory\\System Code Resident MegaBytes, and
Memory\\Pool Paged Resident MegaBytes counters.
 This counter displays the last observed value
only; it is not an average. ]]>
			</description>
		</scalar>
        <scalar name="memoryCacheMBytesPeak" oid="1.3.6.1.4.1.9600.1.1.2.32" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Cache MegaBytes Peak is the maximum number of
megabytes used by the file system cache since
the system was last restarted. This might be
larger than the current size of the cache. This
counter displays the last observed value only;
it is not an average. ]]>
			</description>
		</scalar>
		<scalar name="memoryPoolNonpagedMBytes" oid="1.3.6.1.4.1.9600.1.1.2.33" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Pool Nonpaged MegaBytes is the size, in
megabytes, of the nonpaged pool, an area of
system memory (physical memory used by the
operating system) for objects that cannot be
written to disk, but must remain in physical
memory as long as they are allocated. 
Memory\\Pool Nonpaged MegaBytes is calculated
differently than Process\\Pool Nonpaged
MegaBytes, so it might not equal Process\\Pool
Nonpaged MegaBytes\\_Total.  This counter
displays the last observed value only; it is
not an average.]]>
			</description>
		</scalar>
		<scalar name="memoryPoolPagedMBytes" oid="1.3.6.1.4.1.9600.1.1.2.34" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Pool Paged MegaBytes is the size, in
megabytes, of the paged pool, an area of system
memory (physical memory used by the operating
system) for objects that can be written to disk
when they are not being used.  Memory\\Pool
Paged MegaBytes is calculated differently than
Process\\Pool Paged MegaBytes, so it might not
equal Process\\Pool Paged MegaBytes\\_Total.
This counter displays the last observed value
only; it is not an average.]]>
			</description>
		</scalar>
		<scalar name="memoryPoolPagedResidentMBytes" oid="1.3.6.1.4.1.9600.1.1.2.35" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Pool Paged Resident MegaBytes is the current
size, in megabytes, of the paged pool. The
paged pool is an area of system memory
(physical memory used by the operating system)
for objects that can be written to disk when
they are not being used. Space used by the
paged and nonpaged pools are taken from
physical memory, so a pool that is too large
denies memory space to processes. This counter
displays the last observed value only; it is
not an average.]]>
			</description>
		</scalar>
		<scalar name="memorySystemCacheResidentMBytes" oid="1.3.6.1.4.1.9600.1.1.2.36" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[System Cache Resident MegaBytes is the size,
in megabytes, of the pageable operating system
code in the file system cache. This value
includes only current physical pages and does
not include any virtual memory pages not
currently resident. It does equal the System
Cache value shown in Task Manager. As a result,
this value may be smaller than the actual
amount of virtual memory in use by the file
system cache. This value is a component of
Memory\\System Code Resident MegaBytes which
represents all pageable operating system code
that is currently in physical memory. This
counter displays the last observed value only;
it is not an average. ]]>
			</description>
		</scalar>
        <scalar name="memorySystemCodeResidentMBytes" oid="1.3.6.1.4.1.9600.1.1.2.37" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[System Code Resident MegaBytes is the size, in
megabytes of the operating system code
currently in physical memory that can be
written to disk when not in use. This value is
a component of Memory\\System Code Total
MegaBytes, which also includes operating system
code on disk. Memory\\System Code Resident
MegaBytes (and Memory\\System Code Total
MegaBytes) does not include code that must
remain in physical memory and cannot be written
to disk. This counter displays the last
observed value only; it is not an average.]]>
			</description>
		</scalar>
		<scalar name="memorySystemCodeTotalMBytes" oid="1.3.6.1.4.1.9600.1.1.2.38" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[System Code Total MegaBytes is the size, in
megabytes, of the pageable operating system
code currently in virtual memory. It is a
measure of the amount of physical memory being
used by the operating system that can be
written to disk when not in use. This value is
calculated by summing the megabytes in
Ntoskrnl.exe, Hal.dll, the boot drivers, and
file systems loaded by Ntldr/osloader.  This
counter does not include code that must remain
in physical memory and cannot be written to
disk. This counter displays the last observed
value only; it is not an average.]]>
			</description>
		</scalar>
        <scalar name="memorySystemDriverResidentMBytes" oid="1.3.6.1.4.1.9600.1.1.2.39" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[System Driver Resident MegaBytes is the size,
in megabytes, of the pageable physical memory
being used by device drivers. It is the working
set (physical memory area) of the drivers. This
value is a component of Memory\\System Driver
Total MegaBytes, which also includes driver
memory that has been written to disk. Neither
Memory\\System Driver Resident MegaBytes nor
Memory\\System Driver Total MegaBytes includes
memory that cannot be written to disk.]]>
			</description>
		</scalar>								
        <scalar name="memorySystemDriverTotalMBytes" oid="1.3.6.1.4.1.9600.1.1.2.40" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[System Driver Total MegaBytes is the size, in
	    megabytes, of the pageable virtual memory
	    currently being used by device drivers.
	    Pageable memory can be written to disk when it
	    is not being used. It includes physical memory
	    (Memory\\System Driver Resident MegaBytes) and
	    code and data paged to disk. It is a component
	    of Memory\\System Code Total MegaBytes. This
	    counter displays the last observed value only;
	    it is not an average.]]>
			</description>
		</scalar>		
        <table name="networkInterfaceTable" oid="1.3.6.1.4.1.9600.1.1.3" status="current">
			<description>
			<![CDATA[The Network Interface performance object
consists of counters that measure the rates at
which bytes and packets are sent and received
over a TCP/IP connection. It includes counters
that monitor connection errors. The Network
Interface counters display data about the
network adapters on the server computer. The
first instance of the Network Interface object
(Instance 1) that you see in System Monitor
represents the loopback. The loopback is a
local path through the protocol driver and the
network adapter. All other instances represent
installed network adapters.]]>
			</description>
			<row name="networkInterfaceEntry" oid="1.3.6.1.4.1.9600.1.1.3.1" create="false" status="current">
				<linkage implied="false">
					<index module="INFORMANT-STD" name="netInstance" />
				</linkage>
				<description>
				<![CDATA[Performance information for one particular
instance of 'Network Interface' object.]]>
				</description>
				<column name="netInstance" oid="1.3.6.1.4.1.9600.1.1.3.1.1" status="current">
					<syntax>
						<type name="InstanceName" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Instance name.]]>
					</description>
				</column>
				<column name="netBytesReceivedPerSec" oid="1.3.6.1.4.1.9600.1.1.3.1.2" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Bytes Received/sec is the rate at which bytes
are received on the interface, including
framing characters.]]>
					</description>
				</column>
				<column name="netBytesSentPerSec" oid="1.3.6.1.4.1.9600.1.1.3.1.3" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Bytes Sent/sec is the rate at which bytes are
sent on the interface, including framing
characters.]]>
					</description>
				</column>
				<column name="netBytesTotalPerSec" oid="1.3.6.1.4.1.9600.1.1.3.1.4" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Bytes Total/sec is the rate at which bytes are
sent and received on the interface, including
framing characters.]]>
					</description>
				</column>
				<column name="netCurrentBandwidth" oid="1.3.6.1.4.1.9600.1.1.3.1.5" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Current Bandwidth is an estimate of the
interface's current bandwidth in bits per
second (BPS).  For interfaces that do not vary
in bandwidth or for those where no accurate
estimation can be made, this value is the
nominal bandwidth.]]>
					</description>
				</column>
				<column name="netOutputQueueLength" oid="1.3.6.1.4.1.9600.1.1.3.1.6" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Output Queue Length is the length of the
output packet queue (in packets).  If this is
longer than 2, delays are being experienced and
the bottleneck should be found and eliminated
if possible.  Since the requests are queued by
NDIS in this implementation, this will always
be 0.]]>
					</description>
				</column>
				<column name="netPacketsOutboundDiscarded" oid="1.3.6.1.4.1.9600.1.1.3.1.7" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Packets Outbound Discarded is the number of
outbound packets that were chosen to be
discarded even though no errors had been
detected to prevent their being transmitted. 
One possible reason for discarding such a
packet could be to free up buffer space.]]>
					</description>
				</column>
				<column name="netPacketsOutboundErrors" oid="1.3.6.1.4.1.9600.1.1.3.1.8" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Packets Outbound Errors is the number of
outbound packets that could not be transmitted
because of errors.]]>
					</description>
				</column>
				<column name="netPacketsReceivedDiscarded" oid="1.3.6.1.4.1.9600.1.1.3.1.9" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Packets Received Discarded is the number of
inbound packets that were chosen to be
discarded even though no errors had been
detected to prevent their being deliverable to
a higher-layer protocol.  One possible reason
for discarding such a packet could be to free
up buffer space.]]>
					</description>
				</column>
				<column name="netPacketsReceivedErrors" oid="1.3.6.1.4.1.9600.1.1.3.1.10" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Packets Received Errors is the number of
inbound packets that contained errors
preventing them from being deliverable to a
higher-layer protocol.]]>
					</description>
				</column>
				<column name="netPacketsReceivedUnknown" oid="1.3.6.1.4.1.9600.1.1.3.1.11" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Packets Received Unknown is the number of
packets received via the interface that were
discarded because of an unknown or unsupported
protocol.]]>
					</description>
				</column>
				<column name="netPacketsReceivedPerSec" oid="1.3.6.1.4.1.9600.1.1.3.1.12" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Packets Received/sec is the rate at which
packets are received on the network interface.]]>
					</description>
				</column>
				<column name="netPacketsSentPerSec" oid="1.3.6.1.4.1.9600.1.1.3.1.13" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Packets Sent/sec is the rate at which packets
are sent on the network interface.]]>
					</description>
				</column>
				<column name="netPacketsPerSec" oid="1.3.6.1.4.1.9600.1.1.3.1.14" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Packets/sec is the rate at which packets are
sent and received on the network interface.]]>
					</description>
				</column>
			</row>
		</table>
        <node name="objects" oid="1.3.6.1.4.1.9600.1.1.4" />
		<scalar name="objectsProcesses" oid="1.3.6.1.4.1.9600.1.1.4.1" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Processes is the number of processes in the
computer at the time of data collection. 
Notice that this is an instantaneous count, not
an average over the time interval.	Each
process represents the running of a program.]]>
			</description>
		</scalar>
		<scalar name="objectsThreads" oid="1.3.6.1.4.1.9600.1.1.4.2" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[Threads is the number of threads in the
computer at the time of data collection. 
Notice that this is an instantaneous count, not
an average over the time interval.	A thread is
the basic executable entity that can execute
instructions in a processor.]]>
			</description>
		</scalar>
		<table name="processorTable" oid="1.3.6.1.4.1.9600.1.1.5" status="current">
			<description>
			<![CDATA[The Processor performance object consists of
counters that measure aspects of processor
activity. The processor is the part of the
computer that performs arithmetic and logical
computations, initiates operations on
peripherals, and runs the threads of processes.
A computer can have multiple processors. The
processor object represents each processor as
an instance of the object.]]>
			</description>
			<row name="processorEntry" oid="1.3.6.1.4.1.9600.1.1.5.1" create="false" status="current">
				<linkage implied="false">
					<index module="INFORMANT-STD" name="cpuInstance" />
				</linkage>
				<description>
				<![CDATA[Performance information for one particular
instance of 'Processor' object.]]>
				</description>
				<column name="cpuInstance" oid="1.3.6.1.4.1.9600.1.1.5.1.1" status="current">
					<syntax>
						<type name="InstanceName" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Instance name.]]>
					</description>
				</column>
				<column name="cpuPercentDPCTime" oid="1.3.6.1.4.1.9600.1.1.5.1.2" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[% DPC Time is the percentage of time that the
processor spent receiving and servicing
deferred procedure calls (DPCs) during the
sample interval.  (DPCs are interrupts that run
at a lower priority than standard interrupts).
% DPC Time is a component of % Privileged Time
because DPCs are executed in privileged mode. 
They are counted separately and are not a
component of the interrupt counters.  This
counter displays the average busy time as a
percentage of the sample time. ]]>
					</description>
				</column>
				<column name="cpuPercentInterruptTime" oid="1.3.6.1.4.1.9600.1.1.5.1.3" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[% Interrupt Time is the percentage of time the
processor spent receiving and servicing
hardware interrupts during the sample interval.
 This value is an indirect indicator of the
activity of devices that generate interrupts,
such as the system clock, the mouse, disk
drivers, data communication lines, network
interface cards and other peripheral devices.
These devices normally interrupt the processor
when they have completed a task or require
attention.	Normal thread execution is
suspended during interrupts.  Most system
clocks interrupt the processor every 10
milliseconds, creating a background of
interrupt activity.  This counter displays the
average busy time as a percentage of the sample
time. ]]>
					</description>
				</column>
				<column name="cpuPercentPrivilegedTime" oid="1.3.6.1.4.1.9600.1.1.5.1.4" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[% Privileged Time is the percentage of
non-idle processor time spent in privileged
mode.  (Privileged mode is a processing mode
designed for operating system components and
hardware-manipulating drivers.  It allows
direct access to hardware and all memory.  The
alternative, user mode, is a restricted
processing mode designed for applications,
environment subsystems, and integral
subsystems.  The operating system switches
application threads to privileged mode to
access operating system services). % Privileged
Time includes time servicing interrupts and
DPCs.  A high rate of privileged time might be
attributable to a large number of interrupts
generated by a failing device.  This counter
displays the average busy time as a percentage
of the sample time. ]]>
					</description>
				</column>
				<column name="cpuPercentProcessorTime" oid="1.3.6.1.4.1.9600.1.1.5.1.5" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[% Processor Time is the percentage of time
that the processor is executing a non-Idle
thread.  This counter was designed as a primary
indicator of processor activity.  It is
calculated by measuring the time that the
processor spends executing the thread of the
Idle process in each sample interval, and
subtracting that value from 100%.  (Each
processor has an Idle thread which consumes
cycles when no other threads are ready to run).
It can be viewed as the percentage of the
sample interval spent doing useful work.  This
counter displays the average percentage of busy
time observed during the sample interval.  It
is calculated by monitoring the time the
service was inactive, and then subtracting that
value from 100%.]]>
					</description>
				</column>
				<column name="cpuPercentUserTime" oid="1.3.6.1.4.1.9600.1.1.5.1.6" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[% User Time is the percentage of non-idle
processor time spent in user mode.	(User mode
is a restricted processing mode designed for
applications, environment subsystems, and
integral subsystems.  The alternative,
privileged mode, is designed for operating
system components and allows direct access to
hardware and all memory.  The operating system
switches application threads to privileged mode
to access operating system services). This
counter displays the average busy time as a
percentage of the sample time. ]]>
					</description>
				</column>
				<column name="cpuAPCBypassesPerSec" oid="1.3.6.1.4.1.9600.1.1.5.1.7" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[APC Bypasses/sec is the rate at which Kernel
APC interrupts were avoided.  APC Bypasses/sec
is the rate at which kernel APC interrupts were
short-circuited.  This counter displays the
difference between the values observed in the
last two samples, divided by the duration of
the sample interval.]]>
					</description>
				</column>
				<column name="cpuDPCBypassesPerSec" oid="1.3.6.1.4.1.9600.1.1.5.1.8" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[DPC Bypasses/sec is the rate at which deferred
procedure calls (DPCs) on all processors were
avoided.  (DPCs are interrupts that run at a
lower priority than standard interrupts). This
counter displays the difference between the
values observed in the last two samples,
divided by the duration of the sample
interval.]]>
					</description>
				</column>
				<column name="cpuDPCRate" oid="1.3.6.1.4.1.9600.1.1.5.1.9" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[DPC Rate is the rate at which deferred
procedure calls (DPCs) are added to the
processor's DPC queue between the timer ticks
of the processor clock.  (DPCs are interrupts
that run at a lower priority than standard
interrupts.  Each processor has its own DPC
queue). This counter measures the rate at which
DPCs are added to the queue, not the number of
DPCs in the queue.	This counter displays the
last observed value only; it is not an average.
]]>
					</description>
				</column>
				<column name="cpuDPCsQueuedPerSec" oid="1.3.6.1.4.1.9600.1.1.5.1.10" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[DPCs Queued/sec is the overall rate at which
deferred procedure calls (DPCs) are added to
the processor's DPC queue.	(DPCs are
interrupts that run at a lower priority than
standard interrupts.  Each processor has its
own DPC queue). This counter measures the rate
at which DPCs are added to the queue, not the
number of DPCs in the queue.  This counter
displays the difference between the values
observed in the last two samples, divided by
the duration of the sample interval. ]]>
					</description>
				</column>
				<column name="cpuInterruptsPerSec" oid="1.3.6.1.4.1.9600.1.1.5.1.11" status="current">
					<syntax>
						<type name="Gauge32" module="" />
					</syntax>
					<access>read-only		</access>
					<description>
					<![CDATA[Interrupts/sec is the average number of
hardware interrupts the processor is receiving
and servicing in each second. It does not
include DPCs, which are counted separately.
This value is an indirect indicator of the
activity of devices that generate interrupts,
such as the system clock, the mouse, disk
drivers, data communication lines, network
interface cards and other peripheral devices.
These devices normally interrupt the processor
when they have completed a task or require
attention. Normal thread execution is suspended
during interrupts. Most system clocks interrupt
the processor every 10 milliseconds, creating a
background of interrupt activity. This counter
displays the difference between the values
observed in the last two samples, divided by
the duration of the sample interval. ]]>
					</description>
				</column>
			</row>
		</table>
        <node name="system" oid="1.3.6.1.4.1.9600.1.1.6" />				
        <scalar name="systemSystemUpTime" oid="1.3.6.1.4.1.9600.1.1.6.1" status="current">
			<syntax>
				<type name="Gauge32" module="" />
			</syntax>
			<access>read-only</access>
			<description>
			<![CDATA[System Up Time is the elapsed time (in
	    seconds) that the computer has been running
	    since it was last started.	This counter
	    displays the difference between the start time
	    and the current time.]]>
			</description>
		</scalar>        
	</nodes>
</smi>
<!--This feature is available only in the licensed version of MG-SOFT MIB Explorer.-->
<!--Contact <sales@mg-soft.com> to order the licensed version of the software.-->
